<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>StreamAPI - Your Streaming Service</title>
    <!-- Tailwind CSS via CDN -->
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- Font Awesome for icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <!-- Animation library -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css">
    <style>
        /* Custom styles */
        .movie-card {
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }
        .movie-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
        }
        .nav-link {
            position: relative;
        }
        .nav-link::after {
            content: '';
            position: absolute;
            width: 0;
            height: 2px;
            bottom: -4px;
            left: 0;
            background-color: #10B981;
            transition: width 0.3s ease;
        }
        .nav-link:hover::after {
            width: 100%;
        }
        
        /* Enhanced animations for media cards */
        @keyframes pulse-glow {
            0%, 100% { box-shadow: 0 0 0 0 rgba(16, 185, 129, 0); }
            50% { box-shadow: 0 0 0 8px rgba(16, 185, 129, 0.3); }
        }
        
        @keyframes bounce-subtle {
            0%, 100% { transform: translateY(0); }
            50% { transform: translateY(-3px); }
        }
        
        .play-icon {
            animation: pulse-glow 2s infinite;
        }
        
        .play-icon i {
            animation: bounce-subtle 1.5s infinite;
        }
        
        /* Card hover animations */
        .movie-card img {
            transition: transform 0.5s ease, filter 0.5s ease;
        }
        
        .movie-card:hover img {
            filter: brightness(1.1);
        }
        
        /* Smooth scroll behavior */
        html {
            scroll-behavior: smooth;
        }
        
        /* Animated hover effects for buttons */
        .btn-hover-effect {
            position: relative;
            overflow: hidden;
        }
        
        .btn-hover-effect:after {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
            transition: 0.5s;
        }
        
        .btn-hover-effect:hover:after {
            left: 100%;
        }
    </style>
</head>
<body class="bg-gray-900 text-white min-h-screen">
    <!-- Navigation -->
    <nav class="bg-gray-800 py-4 sticky top-0 z-50">
        <div class="container mx-auto px-4">
            <div class="flex items-center justify-between">
                <a href="/" class="text-2xl font-bold text-green-500 flex items-center">
                    <i class="fas fa-play-circle mr-2"></i>
                    StreamAPI
                </a>
                
                <!-- Desktop Navigation -->
                <div class="hidden md:flex items-center space-x-6">
                    <a href="/browse" class="nav-link hover:text-green-400"><i class="fas fa-film mr-1"></i> Movies</a>
                    <a href="/browse/tv" class="nav-link hover:text-green-400"><i class="fas fa-tv mr-1"></i> TV Shows</a>
                    <a href="/latest" class="nav-link hover:text-green-400"><i class="fas fa-clock mr-1"></i> Latest</a>
                    <a href="/top" class="nav-link hover:text-green-400"><i class="fas fa-star mr-1"></i> Top Rated</a>
                    <a href="/watchlist" class="nav-link hover:text-green-400"><i class="fas fa-bookmark mr-1"></i> Watchlist</a>
                    <!-- <a href="/torrent/search" class="nav-link hover:text-green-400"><i class="fas fa-magnet mr-1"></i> Torrents</a> -->
                    <a href="/contact" class="nav-link hover:text-green-400"><i class="fas fa-envelope mr-1"></i> Contact</a>
                    
                    <!-- User Info Dropdown -->
                    <div class="relative group">
                        <button class="nav-link hover:text-green-400 flex items-center">
                            <i class="fas fa-info-circle mr-1"></i> Info
                            <i class="fas fa-chevron-down ml-1 text-xs"></i>
                        </button>
                        <div class="absolute right-0 mt-2 w-64 bg-gray-800 border border-gray-700 rounded-lg shadow-xl hidden group-hover:block text-sm">
                            <div class="p-4 space-y-2">
                                <div class="flex items-center justify-between">
                                    <span class="text-gray-400">OS:</span>
                                    <span class="text-green-400"><%= userInfo.systemInfo.platform %> <%= userInfo.systemInfo.release %></span>
                                </div>
                                <div class="flex items-center justify-between">
                                    <span class="text-gray-400">Browser:</span>
                                    <span class="text-green-400"><%= userInfo.browser %> <%= userInfo.version %></span>
                                </div>
                                <div class="flex items-center justify-between">
                                    <span class="text-gray-400">System:</span>
                                    <span class="text-green-400"><%= userInfo.userOs %></span>
                                </div>
                                <div class="flex items-center justify-between">
                                    <span class="text-gray-400">Time Spent:</span>
                                    <span class="text-green-400">
                                        <% 
                                        const hours = Math.floor(userInfo.timeSpent / 3600);
                                        const minutes = Math.floor((userInfo.timeSpent % 3600) / 60);
                                        const seconds = userInfo.timeSpent % 60;
                                        %>
                                        <%= hours %>h <%= minutes %>m <%= seconds %>s
                                    </span>
                                </div>
                                <div class="flex items-center justify-between">
                                    <span class="text-gray-400">Network Speed:</span>
                                    <span class="text-green-400"><%= userInfo.networkSpeed %></span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Search Bar -->
                <div class="hidden md:flex items-center flex-grow max-w-md mx-6">
                    <div class="relative flex-grow">
                        <input 
                            type="text" 
                            id="navbar-search" 
                            placeholder="Search for movies or TV shows..." 
                            class="w-full bg-gray-700 text-white border border-gray-600 rounded-full py-2 pl-10 pr-4 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent text-sm transition-all"
                        >
                        <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                            <i class="fas fa-search text-gray-400"></i>
                        </div>
                        <!-- Search Results Dropdown (hidden by default) -->
                        <div id="search-results" class="absolute mt-2 w-full bg-gray-800 border border-gray-700 rounded-lg shadow-xl hidden z-50 max-h-96 overflow-y-auto">
                            <!-- Results will be populated by JavaScript -->
                        </div>
                    </div>
                    <!-- Active Users Counter -->
                    <div class="ml-4 flex items-center bg-gray-700 px-4 py-2 rounded-full">
                        <i class="fas fa-users text-green-500 mr-2"></i>
                        <span class="text-sm font-medium" id="active-users-count"><%= activeUsers %> online</span>
                    </div>
                </div>
                
                <div class="flex items-center">
                    <a href="/search" class="p-2 rounded-lg bg-gray-700 hover:bg-gray-600 transition mr-2 md:hidden">
                        <i class="fas fa-search"></i>
                    </a>
                    <a href="/watchlist" class="p-2 rounded-lg bg-gray-700 hover:bg-gray-600 transition mr-2">
                        <i class="fas fa-bookmark"></i>
                    </a>
                    <button class="md:hidden p-2" id="mobile-menu-button">
                        <i class="fas fa-bars"></i>
                    </button>
                </div>
            </div>
            
            <!-- Mobile menu (hidden by default) -->
            <div class="md:hidden hidden" id="mobile-menu">
                <div class="mt-3 px-2 pt-2 pb-3 space-y-1 animate__animated animate__fadeIn">
                    <!-- Mobile Search -->
                    <div class="relative mb-3">
                        <input 
                            type="text" 
                            id="mobile-navbar-search" 
                            placeholder="Search movies & TV..." 
                            class="w-full bg-gray-700 text-white border border-gray-600 rounded-full py-2 pl-10 pr-4 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent text-sm"
                        >
                        <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                            <i class="fas fa-search text-gray-400"></i>
                        </div>
                        <!-- Mobile Search Results Dropdown (hidden by default) -->
                        <div id="mobile-search-results" class="absolute mt-2 w-full bg-gray-800 border border-gray-700 rounded-lg shadow-xl hidden z-50 max-h-96 overflow-y-auto">
                            <!-- Results will be populated by JavaScript -->
                        </div>
                    </div>
                    
                    <a href="/browse" class="block px-3 py-2 rounded-lg hover:bg-gray-700 transition">
                        <i class="fas fa-film mr-2"></i> Movies
                    </a>
                    <a href="/browse/tv" class="block px-3 py-2 rounded-lg hover:bg-gray-700 transition">
                        <i class="fas fa-tv mr-2"></i> TV Shows
                    </a>
                    <a href="/latest" class="block px-3 py-2 rounded-lg hover:bg-gray-700 transition">
                        <i class="fas fa-clock mr-2"></i> Latest
                    </a>
                    <a href="/top" class="block px-3 py-2 rounded-lg hover:bg-gray-700 transition">
                        <i class="fas fa-star mr-2"></i> Top Rated
                    </a>
                    <a href="/watchlist" class="block px-3 py-2 rounded-lg hover:bg-gray-700 transition">
                        <i class="fas fa-bookmark mr-2"></i> Watchlist
                    </a>
                    <a href="/torrent/search" class="block px-3 py-2 rounded-lg hover:bg-gray-700 transition">
                        <i class="fas fa-magnet mr-2"></i> Torrents
                    </a>
                    <a href="/contact" class="block px-3 py-2 rounded-lg hover:bg-gray-700 transition">
                        <i class="fas fa-envelope mr-2"></i> Contact
                    </a>
                    
                    <!-- Mobile User Info -->
                    <div class="mt-4 px-3 py-3 bg-gray-700 rounded-lg">
                        <h4 class="text-sm font-semibold text-green-400 mb-2">System Information</h4>
                        <div class="space-y-2 text-sm">
                            <div class="flex justify-between">
                                <span class="text-gray-400">OS:</span>
                                <span><%= userInfo.systemInfo.platform %> <%= userInfo.systemInfo.release %></span>
                            </div>
                            <div class="flex justify-between">
                                <span class="text-gray-400">Browser:</span>
                                <span><%= userInfo.browser %> <%= userInfo.version %></span>
                            </div>
                            <div class="flex justify-between">
                                <span class="text-gray-400">System:</span>
                                <span><%= userInfo.userOs %></span>
                            </div>
                            <div class="flex justify-between">
                                <span class="text-gray-400">Time Spent:</span>
                                <span>
                                    <% 
                                    const mHours = Math.floor(userInfo.timeSpent / 3600);
                                    const mMinutes = Math.floor((userInfo.timeSpent % 3600) / 60);
                                    const mSeconds = userInfo.timeSpent % 60;
                                    %>
                                    <%= mHours %>h <%= mMinutes %>m <%= mSeconds %>s
                                </span>
                            </div>
                            <div class="flex justify-between">
                                <span class="text-gray-400">Network Speed:</span>
                                <span><%= userInfo.networkSpeed %></span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </nav>

    <!-- Main Content -->
    <main class="container mx-auto px-4 py-8">
        <%- body %>
    </main>

    <!-- Footer -->
    <footer class="bg-gray-800 text-gray-400 py-8">
        <div class="container mx-auto px-4">
            <div class="grid grid-cols-1 md:grid-cols-4 gap-8">
                <!-- About -->
                <div>
                    <h2 class="text-xl font-bold text-green-500 flex items-center mb-4">
                        <i class="fas fa-play-circle mr-2"></i>
                        StreamAPI
                    </h2>
                    <p class="mb-4">Your ultimate streaming destination for discovering movies and TV shows. Access the latest releases, top-rated content, and manage your personal watchlist.</p>
                    <div class="flex space-x-4">
                        <a href="#" class="hover:text-white transition"><i class="fab fa-github text-xl"></i></a>
                        <a href="#" class="hover:text-white transition"><i class="fab fa-twitter text-xl"></i></a>
                        <a href="#" class="hover:text-white transition"><i class="fab fa-discord text-xl"></i></a>
                        <a href="#" class="hover:text-white transition"><i class="fab fa-instagram text-xl"></i></a>
                    </div>
                </div>
                
                <!-- Quick Links -->
                <div>
                    <h3 class="text-lg font-bold mb-4 text-white">Quick Links</h3>
                    <ul class="space-y-2">
                        <li><a href="/browse" class="hover:text-green-400 transition"><i class="fas fa-chevron-right text-xs mr-2"></i>Movies</a></li>
                        <li><a href="/browse/tv" class="hover:text-green-400 transition"><i class="fas fa-chevron-right text-xs mr-2"></i>TV Shows</a></li>
                        <li><a href="/latest" class="hover:text-green-400 transition"><i class="fas fa-chevron-right text-xs mr-2"></i>Latest Releases</a></li>
                        <li><a href="/top" class="hover:text-green-400 transition"><i class="fas fa-chevron-right text-xs mr-2"></i>Top Rated</a></li>
                        <li><a href="/watchlist" class="hover:text-green-400 transition"><i class="fas fa-chevron-right text-xs mr-2"></i>My Watchlist</a></li>
                        <li><a href="/torrent/search" class="hover:text-green-400 transition"><i class="fas fa-magnet text-xs mr-2"></i>Torrent Search</a></li>
                    </ul>
                </div>
                
                <!-- Legal -->
                <div>
                    <h3 class="text-lg font-bold mb-4 text-white">Legal</h3>
                    <ul class="space-y-2">
                        <li><a href="/terms" class="hover:text-green-400 transition flex items-center"><i class="fas fa-chevron-right text-xs mr-2"></i>Terms of Service</a></li>
                        <li><a href="/privacy" class="hover:text-green-400 transition flex items-center"><i class="fas fa-chevron-right text-xs mr-2"></i>Privacy Policy</a></li>
                        <li><a href="/copyright" class="hover:text-green-400 transition flex items-center"><i class="fas fa-chevron-right text-xs mr-2"></i>Copyright</a></li>
                        <li><a href="/api" class="hover:text-green-400 transition flex items-center"><i class="fas fa-chevron-right text-xs mr-2"></i>API Reference</a></li>
                        <li><a href="/contact" class="hover:text-green-400 transition flex items-center"><i class="fas fa-chevron-right text-xs mr-2"></i>Contact Us</a></li>
                    </ul>
                </div>
                
                <!-- Newsletter -->
                <div>
                    <h3 class="text-lg font-bold mb-4 text-white">Newsletter</h3>
                    <p class="mb-4">Subscribe to our newsletter to get updates on the latest movies and TV shows.</p>
                    
                    <form id="newsletter-form" action="/api/subscribe" method="POST" class="space-y-3">
                        <div class="relative">
                            <input 
                                type="email" 
                                name="email" 
                                placeholder="your@email.com" 
                                class="w-full bg-gray-700 border border-gray-600 rounded-lg py-2 pl-3 pr-10 text-white focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent text-sm transition"
                                required
                            >
                            <button type="submit" class="absolute right-2 top-1/2 transform -translate-y-1/2 text-green-500 hover:text-green-400 transition">
                                <i class="fas fa-paper-plane newsletter-submit-icon"></i>
                                <i class="fas fa-spinner fa-spin newsletter-loading-icon hidden"></i>
                            </button>
                        </div>
                        
                        <!-- Success message (hidden by default) -->
                        <div id="newsletter-success" class="hidden text-green-500 text-sm animate__animated animate__fadeIn">
                            <i class="fas fa-check-circle mr-1"></i> Thank you for subscribing! Check your email for confirmation.
                        </div>
                        
                        <!-- Error message (hidden by default) -->
                        <div id="newsletter-error" class="hidden text-red-500 text-sm animate__animated animate__fadeIn">
                            <i class="fas fa-exclamation-circle mr-1"></i> <span id="newsletter-error-message">Error subscribing.</span>
                        </div>
                    </form>
                </div>
            </div>
            
            <hr class="border-gray-700 my-6">
            
            <div class="flex flex-col md:flex-row justify-between items-center">
                <p class="text-sm">Powered by TMDB API. This product uses the TMDB API but is not endorsed or certified by TMDB.</p>
                <p class="text-sm mt-2 md:mt-0">&copy; <%= new Date().getFullYear() %> StreamAPI. All rights reserved.</p>
            </div>
            <div class="text-center mt-4">
                <p class="text-sm text-gray-500">Created with 💚 by <a href="https://github.com/BotCoder254" class="text-green-500 hover:text-green-400 transition">@BotCoder254</a></p>
            </div>
        </div>
    </footer>

    <!-- JavaScript -->
    <script>
        // Mobile menu toggle
        const mobileMenuButton = document.getElementById('mobile-menu-button');
        const mobileMenu = document.getElementById('mobile-menu');
        
        mobileMenuButton.addEventListener('click', () => {
            mobileMenu.classList.toggle('hidden');
        });
        
        // Add animation classes to movie cards
        document.addEventListener('DOMContentLoaded', function() {
            const movieCards = document.querySelectorAll('.movie-card');
            movieCards.forEach((card, index) => {
                card.classList.add('animate__animated', 'animate__fadeIn');
                card.style.animationDelay = `${index * 0.05}s`;
            });
            
            // Setup real-time search
            setupSearch();
            
            // Setup newsletter form
            setupNewsletterForm();
        });
        
        // Newsletter form handler
        function setupNewsletterForm() {
            const newsletterForm = document.getElementById('newsletter-form');
            const successMessage = document.getElementById('newsletter-success');
            const errorMessage = document.getElementById('newsletter-error');
            const errorMessageText = document.getElementById('newsletter-error-message');
            const submitIcon = document.querySelector('.newsletter-submit-icon');
            const loadingIcon = document.querySelector('.newsletter-loading-icon');
            
            if (newsletterForm) {
                newsletterForm.addEventListener('submit', function(e) {
                    e.preventDefault();
                    
                    // Hide any existing messages
                    successMessage.classList.add('hidden');
                    errorMessage.classList.add('hidden');
                    
                    // Show loading state
                    submitIcon.classList.add('hidden');
                    loadingIcon.classList.remove('hidden');
                    
                    const email = this.email.value.trim();
                    
                    // Validate email format client-side
                    const emailRegex = /^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$/;
                    if (!emailRegex.test(email)) {
                        errorMessageText.textContent = 'Please enter a valid email address';
                        errorMessage.classList.remove('hidden');
                        
                        // Reset loading state
                        submitIcon.classList.remove('hidden');
                        loadingIcon.classList.add('hidden');
                        return;
                    }
                    
                    fetch('/api/subscribe', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ email }),
                    })
                    .then(response => response.json())
                    .then(data => {
                        // Reset loading state
                        submitIcon.classList.remove('hidden');
                        loadingIcon.classList.add('hidden');
                        
                        if (data.success) {
                            // Show success message
                            successMessage.classList.remove('hidden');
                            
                            // Clear the form
                            newsletterForm.reset();
                        } else {
                            // Show error message
                            errorMessageText.textContent = data.message || 'Error subscribing to newsletter.';
                            errorMessage.classList.remove('hidden');
                        }
                    })
                    .catch(error => {
                        // Reset loading state
                        submitIcon.classList.remove('hidden');
                        loadingIcon.classList.add('hidden');
                        
                        // Show error message
                        errorMessageText.textContent = 'Network error. Please try again later.';
                        errorMessage.classList.remove('hidden');
                        console.error('Newsletter subscription error:', error);
                    });
                });
            }
        }
        
        // Real-time search functionality
        function setupSearch() {
            const searchInput = document.getElementById('navbar-search');
            const mobileSearchInput = document.getElementById('mobile-navbar-search');
            const searchResults = document.getElementById('search-results');
            
            let searchTimeout;
            
            // Handle search input (desktop)
            if (searchInput) {
                searchInput.addEventListener('focus', () => {
                    searchResults.classList.remove('hidden');
                });
                
                // Close search results when clicking outside
                document.addEventListener('click', (e) => {
                    if (!searchInput.contains(e.target) && !searchResults.contains(e.target)) {
                        searchResults.classList.add('hidden');
                    }
                });
                
                searchInput.addEventListener('input', (e) => {
                    const query = e.target.value.trim();
                    
                    // Clear previous timeout
                    clearTimeout(searchTimeout);
                    
                    if (query.length < 2) {
                        searchResults.innerHTML = '<div class="p-4 text-gray-400 text-sm">Type at least 2 characters to search</div>';
                        return;
                    }
                    
                    // Show loading indicator
                    searchResults.innerHTML = '<div class="p-4 text-center"><i class="fas fa-spinner fa-spin text-green-500"></i></div>';
                    
                    // Debounce the search to avoid too many requests
                    searchTimeout = setTimeout(() => {
                        performSearch(query);
                    }, 500);
                });
            }
            
            // Handle mobile search
            if (mobileSearchInput) {
                mobileSearchInput.addEventListener('keypress', (e) => {
                    if (e.key === 'Enter') {
                        const query = e.target.value.trim();
                        if (query.length >= 2) {
                            window.location.href = `/results?q=${encodeURIComponent(query)}`;
                        }
                    }
                });
            }
            
            // Function to perform search and display results
            async function performSearch(query) {
                try {
                    const response = await fetch(`/api/search?q=${encodeURIComponent(query)}&type=movie&limit=5`);
                    
                    if (!response.ok) {
                        throw new Error('Search failed');
                    }
                    
                    const data = await response.json();
                    
                    if (data.results.length === 0) {
                        searchResults.innerHTML = '<div class="p-4 text-gray-400 text-sm">No results found</div>';
                        return;
                    }
                    
                    // Build results HTML
                    let resultsHTML = '';
                    
                    data.results.forEach(item => {
                        const mediaType = item.media_type || 'movie';
                        const title = item.title || item.name;
                        const posterUrl = item.poster ? 
                            item.poster : 
                            'https://via.placeholder.com/92x138?text=No+Image';
                        
                        resultsHTML += `
                            <a href="/view/${mediaType}/${item.id}" class="flex items-center p-2 hover:bg-gray-700 transition-colors border-b border-gray-700 last:border-0">
                                <div class="w-10 h-15 flex-shrink-0 mr-3">
                                    <img src="${posterUrl}" alt="${title}" class="w-full h-full object-cover rounded">
                                </div>
                                <div class="flex-grow">
                                    <h4 class="text-sm font-medium">${title}</h4>
                                    <div class="flex items-center mt-1">
                                        <span class="text-xs text-gray-400">${mediaType === 'tv' ? 'TV Show' : 'Movie'}</span>
                                        ${item.vote_average ? `<span class="ml-2 text-xs bg-gray-700 px-1.5 py-0.5 rounded flex items-center"><i class="fas fa-star text-yellow-400 mr-1 text-[10px]"></i>${item.vote_average.toFixed(1)}</span>` : ''}
                                    </div>
                                </div>
                                <i class="fas fa-chevron-right text-gray-500 text-xs"></i>
                            </a>
                        `;
                    });
                    
                    // Add view all link
                    resultsHTML += `
                        <a href="/results?q=${encodeURIComponent(query)}" class="block p-3 text-center text-green-400 hover:text-green-300 text-sm font-medium">
                            View all results <i class="fas fa-arrow-right ml-1"></i>
                        </a>
                    `;
                    
                    searchResults.innerHTML = resultsHTML;
                    searchResults.classList.remove('hidden');
                    
                } catch (error) {
                    console.error('Search error:', error);
                    searchResults.innerHTML = '<div class="p-4 text-red-400 text-sm">Error performing search</div>';
                }
            }
        }
        
        // Setup WebSocket connection for real-time user count updates
        const ws = new WebSocket(`ws://${window.location.host}`);
        const activeUsersCount = document.getElementById('active-users-count');
        
        ws.onmessage = function(event) {
            const data = JSON.parse(event.data);
            if (data.type === 'userCount') {
                // Animate the counter update
                activeUsersCount.classList.add('animate__animated', 'animate__pulse');
                activeUsersCount.textContent = `${data.count} online`;
                setTimeout(() => {
                    activeUsersCount.classList.remove('animate__animated', 'animate__pulse');
                }, 1000);
            }
        };
        
        ws.onerror = function(error) {
            console.error('WebSocket error:', error);
        };
    </script>
</body>
</html> 