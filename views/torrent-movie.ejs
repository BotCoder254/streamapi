<!-- Torrent Movie Details -->
<div class="animate__animated animate__fadeIn">
    <% if (movie) { %>
        <!-- Movie Background -->
        <div class="relative">
            <div class="absolute inset-0 bg-gradient-to-b from-transparent via-gray-900 to-gray-900"></div>
            <div class="absolute inset-0" style="background-image: url('<%= movie.background_image %>'); background-size: cover; background-position: center; filter: blur(2px) brightness(0.3);"></div>
            
            <!-- Movie Content -->
            <div class="relative container mx-auto px-4 py-12">
                <div class="flex flex-col md:flex-row gap-8">
                    <!-- Movie Poster -->
                    <div class="w-full md:w-1/3 lg:w-1/4">
                        <div class="relative rounded-lg overflow-hidden shadow-xl">
                            <img 
                                src="<%= movie.large_cover_image %>" 
                                alt="<%= movie.title %>" 
                                class="w-full"
                                onerror="this.onerror=null; this.src='https://via.placeholder.com/500x750?text=No+Poster';"
                            >
                        </div>
                    </div>
                    
                    <!-- Movie Info -->
                    <div class="flex-1">
                        <h1 class="text-4xl font-bold mb-2"><%= movie.title %> (<%= movie.year %>)</h1>
                        
                        <!-- Movie Meta -->
                        <div class="flex flex-wrap items-center gap-4 text-sm text-gray-300 mb-6">
                            <% if (movie.rating) { %>
                                <div class="flex items-center">
                                    <i class="fas fa-star text-yellow-500 mr-1"></i>
                                    <span><%= movie.rating %>/10</span>
                                </div>
                            <% } %>
                            
                            <% if (movie.runtime) { %>
                                <div class="flex items-center">
                                    <i class="fas fa-clock text-gray-500 mr-1"></i>
                                    <span><%= movie.runtime %> min</span>
                                </div>
                            <% } %>
                            
                            <% if (movie.language) { %>
                                <div class="flex items-center">
                                    <i class="fas fa-globe text-gray-500 mr-1"></i>
                                    <span><%= movie.language %></span>
                                </div>
                            <% } %>
                            
                            <% if (movie.genres && movie.genres.length > 0) { %>
                                <div class="flex flex-wrap gap-2">
                                    <% movie.genres.forEach(genre => { %>
                                        <a href="/torrent/results?genre=<%= genre.toLowerCase() %>" 
                                           class="px-3 py-1 bg-gray-800 hover:bg-gray-700 rounded-full text-sm transition">
                                            <%= genre %>
                                        </a>
                                    <% }); %>
                                </div>
                            <% } %>
                        </div>
                        
                        <!-- Synopsis -->
                        <% if (movie.description_full) { %>
                            <div class="mb-8">
                                <h2 class="text-xl font-bold mb-3">Synopsis</h2>
                                <p class="text-gray-300 leading-relaxed"><%= movie.description_full %></p>
                            </div>
                        <% } %>
                        
                        <!-- Download Options -->
                        <% if (movie.torrents && movie.torrents.length > 0) { %>
                            <div class="download-section mb-8">
                                <h2 class="text-2xl font-bold mb-6"><i class="fas fa-download mr-2"></i>Download Options</h2>
                                <div class="grid gap-4">
                                    <% movie.torrents.forEach((torrent, index) => { %>
                                        <div class="bg-gray-800 rounded-lg p-4 flex flex-col md:flex-row items-center justify-between gap-4" data-delay="<%= index * 100 %>">
                                            <div class="flex-1">
                                                <div class="flex items-center gap-3 mb-2">
                                                    <span class="bg-green-600 text-sm px-2 py-1 rounded"><%= torrent.quality %></span>
                                                    <span class="text-gray-400"><%= torrent.size %></span>
                                                    <div class="flex items-center gap-2 text-sm">
                                                        <span class="text-green-400" title="Seeds"><i class="fas fa-arrow-up"></i> <%= torrent.seeds %></span>
                                                        <span class="text-red-400" title="Peers"><i class="fas fa-arrow-down"></i> <%= torrent.peers %></span>
                                                    </div>
                                                </div>
                                                
                                                <!-- Progress bar (hidden by default) -->
                                                <div class="progress-bar hidden w-full bg-gray-700 rounded-full h-2 mb-2">
                                                    <div class="progress bg-green-500 h-full rounded-full transition-all duration-300" style="width: 0%"></div>
                                                </div>
                                                <div class="download-status hidden text-sm text-gray-400"></div>
                                                <!-- Download Controls (hidden by default) -->
                                                <div class="download-controls hidden flex items-center gap-2 mt-2">
                                                    <button class="pause-btn bg-yellow-600 hover:bg-yellow-500 text-white px-3 py-1 rounded text-sm transition">
                                                        <i class="fas fa-pause"></i>
                                                    </button>
                                                    <button class="resume-btn hidden bg-green-600 hover:bg-green-500 text-white px-3 py-1 rounded text-sm transition">
                                                        <i class="fas fa-play"></i>
                                                    </button>
                                                    <button class="stop-btn bg-red-600 hover:bg-red-500 text-white px-3 py-1 rounded text-sm transition">
                                                        <i class="fas fa-stop"></i>
                                                    </button>
                                                    <button class="save-btn bg-blue-600 hover:bg-blue-500 text-white px-3 py-1 rounded text-sm transition">
                                                        <i class="fas fa-save"></i>
                                                    </button>
                                                </div>
                                            </div>
                                            
                                            <div class="flex items-center gap-3">
                                                <button class="download-btn bg-green-600 hover:bg-green-500 text-white px-6 py-2 rounded-lg transition flex items-center gap-2"
                                                        data-magnet="<%= torrent.magnet %>"
                                                        data-quality="<%= torrent.quality %>"
                                                        data-size="<%= torrent.size %>">
                                                    <i class="fas fa-download"></i>
                                                    <span>Download</span>
                                                </button>
                                                
                                                <div class="relative">
                                                    <button class="more-options-btn bg-gray-700 hover:bg-gray-600 text-white w-10 h-10 rounded-lg transition flex items-center justify-center">
                                                        <i class="fas fa-ellipsis-v"></i>
                                                    </button>
                                                    <div class="options-menu hidden absolute right-0 mt-2 w-48 bg-gray-800 rounded-lg shadow-xl z-10">
                                                        <button class="copy-magnet w-full text-left px-4 py-2 hover:bg-gray-700 transition flex items-center gap-2" data-magnet="<%= torrent.magnet %>">
                                                            <i class="fas fa-magnet"></i>
                                                            <span>Copy Magnet Link</span>
                                                        </button>
                                                        <a href="<%= torrent.magnet %>" class="block px-4 py-2 hover:bg-gray-700 transition flex items-center gap-2">
                                                            <i class="fas fa-external-link-alt"></i>
                                                            <span>Open Magnet Link</span>
                                                        </a>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    <% }); %>
                                </div>
                            </div>
                        <% } else { %>
                            <div class="col-span-full text-center py-8">
                                <i class="fas fa-exclamation-circle text-4xl text-gray-600 mb-3"></i>
                                <p class="text-gray-400">No download options available for this movie.</p>
                            </div>
                        <% } %>
                    </div>
                </div>
                
                <!-- Additional Info -->
                <div class="mt-12 grid grid-cols-1 md:grid-cols-2 gap-8">
                    <!-- Cast -->
                    <% if (movie.cast && movie.cast.length > 0) { %>
                        <div>
                            <h2 class="text-xl font-bold mb-4">Cast</h2>
                            <div class="grid grid-cols-2 sm:grid-cols-3 gap-4">
                                <% movie.cast.slice(0, 6).forEach(actor => { %>
                                    <div class="bg-gray-800 rounded-lg overflow-hidden group">
                                        <div class="relative pb-[100%]">
                                            <img 
                                                src="<%= actor.url_small_image %>" 
                                                alt="<%= actor.name %>"
                                                class="absolute inset-0 w-full h-full object-cover group-hover:scale-110 transition duration-300"
                                                onerror="this.onerror=null; this.src='https://via.placeholder.com/200x200?text=No+Image';"
                                            >
                                        </div>
                                        <div class="p-2 text-center">
                                            <h3 class="font-medium truncate"><%= actor.name %></h3>
                                            <p class="text-sm text-gray-400 truncate"><%= actor.character_name %></p>
                                        </div>
                                    </div>
                                <% }); %>
                            </div>
                        </div>
                    <% } %>
                    
                    <!-- Similar Movies -->
                    <% if (movie.similar_movies && movie.similar_movies.length > 0) { %>
                        <div>
                            <h2 class="text-xl font-bold mb-4">Similar Movies</h2>
                            <div class="grid grid-cols-2 sm:grid-cols-3 gap-4">
                                <% movie.similar_movies.slice(0, 6).forEach(similar => { %>
                                    <a href="/torrent/movie/<%= similar.id %>" class="block bg-gray-800 rounded-lg overflow-hidden group">
                                        <div class="relative pb-[150%]">
                                            <img 
                                                src="<%= similar.medium_cover_image %>" 
                                                alt="<%= similar.title %>"
                                                class="absolute inset-0 w-full h-full object-cover group-hover:scale-110 transition duration-300"
                                                onerror="this.onerror=null; this.src='https://via.placeholder.com/300x450?text=No+Poster';"
                                            >
                                            <div class="absolute inset-0 bg-black/40 opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-center justify-center">
                                                <span class="text-white px-3 py-1 rounded-full font-bold bg-green-600/80 transform scale-0 group-hover:scale-100 transition-transform duration-300">View Details</span>
                                            </div>
                                        </div>
                                        <div class="p-2">
                                            <h3 class="font-medium truncate"><%= similar.title %></h3>
                                            <div class="flex items-center text-sm text-gray-400">
                                                <i class="fas fa-star text-yellow-500 mr-1"></i>
                                                <span><%= similar.rating %>/10</span>
                                            </div>
                                        </div>
                                    </a>
                                <% }); %>
                            </div>
                        </div>
                    <% } %>
                </div>
                
                <!-- Screenshots -->
                <% if (movie.large_screenshot_image1 || movie.large_screenshot_image2 || movie.large_screenshot_image3) { %>
                    <div class="mt-12">
                        <h2 class="text-xl font-bold mb-4">Screenshots</h2>
                        <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                            <% [movie.large_screenshot_image1, movie.large_screenshot_image2, movie.large_screenshot_image3].forEach(screenshot => { %>
                                <% if (screenshot) { %>
                                    <div class="relative rounded-lg overflow-hidden group cursor-pointer">
                                        <img 
                                            src="<%= screenshot %>" 
                                            alt="Movie Screenshot"
                                            class="w-full h-auto group-hover:scale-105 transition duration-300"
                                            onerror="this.onerror=null; this.src='https://via.placeholder.com/1280x720?text=No+Screenshot';"
                                        >
                                        <div class="absolute inset-0 bg-black/40 opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-center justify-center">
                                            <i class="fas fa-search-plus text-2xl"></i>
                                        </div>
                                    </div>
                                <% } %>
                            <% }); %>
                        </div>
                    </div>
                <% } %>
            </div>
        </div>
    <% } else { %>
        <!-- Error State -->
        <div class="container mx-auto px-4 py-16 text-center">
            <i class="fas fa-film text-5xl text-gray-600 mb-4"></i>
            <h2 class="text-2xl font-bold mb-2">Movie Not Found</h2>
            <p class="text-gray-400 mb-6">The movie you're looking for might have been removed or doesn't exist.</p>
            <a href="/torrent/search" class="inline-block px-6 py-3 bg-green-600 hover:bg-green-700 rounded-lg transition">
                Back to Search
            </a>
        </div>
    <% } %>
</div>

<!-- WebTorrent Client Script -->
<script src="https://cdn.jsdelivr.net/npm/webtorrent@1.9.7/webtorrent.min.js"></script>

<script>
document.addEventListener('DOMContentLoaded', () => {
    const activeDownloads = new Map();
    const DEFAULT_TRACKERS = [
        'udp://open.demonii.com:1337/announce',
        'udp://tracker.openbittorrent.com:80',
        'udp://tracker.coppersurfer.tk:6969',
        'udp://glotorrents.pw:6969/announce',
        'udp://tracker.opentrackr.org:1337/announce',
        'udp://torrent.gresille.org:80/announce',
        'udp://p4p.arenabg.com:1337',
        'udp://tracker.leechers-paradise.org:6969'
    ];
    
    const client = new WebTorrent({
        tracker: {
            announce: DEFAULT_TRACKERS
        }
    });
    
    // Format bytes to human readable size
    function formatBytes(bytes) {
        if (bytes === 0) return '0 B';
        const k = 1024;
        const sizes = ['B', 'KB', 'MB', 'GB', 'TB'];
        const i = Math.floor(Math.log(bytes) / Math.log(k));
        return `${(bytes / Math.pow(k, i)).toFixed(1)} ${sizes[i]}`;
    }
    
    // Helper function to construct magnet URI
    function constructMagnetURI(hash, name) {
        const encodedName = encodeURIComponent(name);
        const trackerString = DEFAULT_TRACKERS.map(tracker => `&tr=${encodeURIComponent(tracker)}`).join('');
        return `magnet:?xt=urn:btih:${hash}&dn=${encodedName}${trackerString}`;
    }
    
    // Download button click handler
    document.querySelectorAll('.download-btn').forEach(btn => {
        btn.addEventListener('click', async function() {
            const magnetURI = this.dataset.magnet;
            const quality = this.dataset.quality;
            const size = this.dataset.size;
            
            try {
                // Update button state
                this.disabled = true;
                this.innerHTML = '<i class="fas fa-spinner fa-spin"></i><span>Starting...</span>';
                
                // Make API call to start download
                const response = await fetch('/torrent/download', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ magnetURI })
                });

                if (!response.ok) {
                    throw new Error('Download failed to start');
                }

                const data = await response.json();
                
                // Create download link for each file
                if (data.files && data.files.length > 0) {
                    data.files.forEach(file => {
                        const a = document.createElement('a');
                        a.href = `/torrent/download/${data.infoHash}/${encodeURIComponent(file.path)}`;
                        a.download = file.name;
                        document.body.appendChild(a);
                        a.click();
                        document.body.removeChild(a);
                    });
                    
                    showToast('Download started');
                } else {
                    throw new Error('No files available');
                }

                // Reset button state after short delay
                setTimeout(() => {
                    this.disabled = false;
                    this.innerHTML = '<i class="fas fa-download"></i><span>Download</span>';
                }, 2000);
                
            } catch (error) {
                console.error('Download error:', error);
                showToast('Failed to start download');
                this.disabled = false;
                this.innerHTML = '<i class="fas fa-download"></i><span>Download</span>';
            }
        });
    });
    
    // More options button handlers
    document.querySelectorAll('.more-options-btn').forEach(btn => {
        btn.addEventListener('click', function(e) {
            e.stopPropagation(); // Prevent click from closing menu immediately
            const menu = this.nextElementSibling;
            // Close all other menus first
            document.querySelectorAll('.options-menu').forEach(m => {
                if (m !== menu) m.classList.add('hidden');
            });
            menu.classList.toggle('hidden');
        });
    });
    
    // Copy magnet link handler
    document.querySelectorAll('.copy-magnet').forEach(btn => {
        btn.addEventListener('click', async function(e) {
            e.preventDefault();
            e.stopPropagation();
            const magnetURI = this.dataset.magnet;
            
            try {
                await navigator.clipboard.writeText(magnetURI);
                showToast('Magnet link copied to clipboard');
            } catch (err) {
                // Fallback for browsers that don't support clipboard API
                const textArea = document.createElement('textarea');
                textArea.value = magnetURI;
                document.body.appendChild(textArea);
                textArea.select();
                try {
                    document.execCommand('copy');
                    showToast('Magnet link copied to clipboard');
                } catch (err) {
                    showToast('Failed to copy magnet link');
                }
                document.body.removeChild(textArea);
            }
            
            // Hide the options menu
            this.closest('.options-menu').classList.add('hidden');
        });
    });
    
    // Handle magnet link clicks
    document.querySelectorAll('a[href^="magnet:"]').forEach(link => {
        link.addEventListener('click', function(e) {
            e.preventDefault();
            const magnetURI = this.href;
            
            // Try to open with a torrent client
            const success = window.open(magnetURI);
            
            if (!success) {
                // If opening failed, copy to clipboard instead
                navigator.clipboard.writeText(magnetURI)
                    .then(() => showToast('Magnet link copied to clipboard (no torrent client found)'))
                    .catch(() => {
                        // Fallback copy method
                        const textArea = document.createElement('textarea');
                        textArea.value = magnetURI;
                        document.body.appendChild(textArea);
                        textArea.select();
                        try {
                            document.execCommand('copy');
                            showToast('Magnet link copied to clipboard (no torrent client found)');
                        } catch (err) {
                            showToast('Failed to copy magnet link');
                        }
                        document.body.removeChild(textArea);
                    });
            }
            
            // Hide the options menu
            this.closest('.options-menu').classList.add('hidden');
        });
    });
    
    // Close options menu when clicking outside
    document.addEventListener('click', function(e) {
        if (!e.target.closest('.more-options-btn') && !e.target.closest('.options-menu')) {
            document.querySelectorAll('.options-menu').forEach(menu => {
                menu.classList.add('hidden');
            });
        }
    });
    
    // Toast notification function
    function showToast(message) {
        const toast = document.getElementById('toast');
        const toastMessage = toast.querySelector('.toast-message');
        
        toastMessage.textContent = message;
        toast.classList.remove('translate-y-full', 'opacity-0');
        
        setTimeout(() => {
            toast.classList.add('translate-y-full', 'opacity-0');
        }, 3000);
    }
});
</script>

<!-- Toast Notification -->
<div id="toast" class="fixed bottom-4 right-4 bg-gray-800 text-white px-4 py-2 rounded-lg shadow-lg transform translate-y-full opacity-0 transition-all duration-300 flex items-center gap-2">
    <i class="fas fa-check text-green-400"></i>
    <span class="toast-message"></span>
</div> 