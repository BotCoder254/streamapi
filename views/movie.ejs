<!-- Movie Details -->
<div class="animate__animated animate__fadeIn">
    <% if (movie && movie.tmdbId) { %>
        <!-- Movie Hero Section with Background -->
        <div class="relative mb-8">
            <% if (movie.background) { %>
                <div class="absolute inset-0 w-full h-full overflow-hidden rounded-xl min-h-[600px]">
                    <img src="<%= movie.background %>" alt="<%= movie.title %> Background" class="w-full h-full object-cover">
                    <div class="absolute inset-0 bg-gradient-to-t from-gray-900 via-gray-900/80 to-transparent"></div>
                </div>
            <% } else { %>
                <div class="absolute inset-0 w-full h-full bg-gradient-to-b from-gray-800 to-gray-900 rounded-xl min-h-[600px]"></div>
            <% } %>
            
            <div class="relative z-10 container mx-auto px-4 py-20 flex flex-col md:flex-row items-center md:items-start gap-8">
                <!-- Movie Poster -->
                <div class="w-72 h-[28rem] flex-shrink-0 bg-gray-800 rounded-lg overflow-hidden shadow-2xl transform hover:scale-105 transition-transform duration-500 group">
                    <% if (movie.poster) { %>
                        <div class="relative w-full h-full overflow-hidden">
                            <img src="<%= movie.poster %>" alt="<%= movie.title %> Poster" class="w-full h-full object-cover group-hover:scale-110 transition-transform duration-700" onerror="this.onerror=null; this.src='https://via.placeholder.com/400x600?text=No+Poster'; this.classList.add('object-contain');">
                            <div class="absolute inset-0 bg-black/40 opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-center justify-center">
                                <span class="bg-green-600/80 text-white px-4 py-2 rounded-full font-bold transform -translate-y-4 group-hover:translate-y-0 transition-transform duration-300">View Details</span>
                            </div>
                        </div>
                    <% } else { %>
                        <div class="w-full h-full flex items-center justify-center bg-gray-700">
                            <i class="fas fa-film text-5xl text-gray-600"></i>
                        </div>
                    <% } %>
                </div>
                
                <!-- Movie Details -->
                <div class="flex-1 text-center md:text-left p-4 bg-gray-900/75 rounded-lg backdrop-blur-sm">
                    <h1 class="text-3xl md:text-4xl font-bold mb-2"><%= movie.title %> <span class="text-gray-400 font-normal"><%= movie.year %></span></h1>
                    
                    <% if (movie.tagline) { %>
                        <p class="text-xl text-green-400 italic mb-4"><%= movie.tagline %></p>
                    <% } %>
                    
                    <div class="flex flex-wrap gap-4 justify-center md:justify-start mb-6">
                        <div class="flex items-center bg-gray-800/70 px-3 py-1 rounded-full">
                            <i class="fas fa-star text-yellow-500 mr-2"></i>
                            <span><%= movie.rating %></span>
                        </div>
                        
                        <div class="flex items-center bg-gray-800/70 px-3 py-1 rounded-full">
                            <i class="fas fa-clock text-blue-400 mr-2"></i>
                            <span><%= movie.runtime %></span>
                        </div>
                        
                        <% if (movie.imdbId) { %>
                            <a href="https://www.imdb.com/title/<%= movie.imdbId %>" target="_blank" class="flex items-center hover:text-yellow-400 transition bg-gray-800/70 px-3 py-1 rounded-full hover:bg-gray-700/70">
                                <i class="fab fa-imdb text-yellow-400 mr-2 text-xl"></i>
                                <span>IMDb</span>
                            </a>
                        <% } %>
                    </div>
                    
                    <p class="text-gray-200 mb-8 text-lg leading-relaxed"><%= movie.overview %></p>
                    
                    <div class="flex flex-wrap gap-3 justify-center md:justify-start">
                        <a href="<%= movie.embedUrl %>" class="play-btn px-6 py-3 bg-green-600 hover:bg-green-500 rounded-lg transition-all flex items-center shadow-lg animate__animated animate__pulse animate__infinite group">
                            <i class="fas fa-play mr-2 group-hover:animate-ping"></i> Watch Now
                        </a>
                        
                        <button 
                            class="watch-party-btn px-6 py-3 bg-purple-600 hover:bg-purple-500 rounded-lg transition flex items-center shadow-lg hover:shadow-xl"
                            data-id="<%= movie.tmdbId %>"
                            data-type="movie"
                            data-title="<%= movie.title %>"
                        >
                            <i class="fas fa-users mr-2"></i> Watch Party
                        </button>
                        
                        <button 
                            class="watchlist-toggle px-6 py-3 bg-gray-700 hover:bg-gray-600 rounded-lg transition flex items-center shadow-lg hover:shadow-xl"
                            data-id="<%= movie.tmdbId %>"
                            data-type="movie"
                            data-title="<%= movie.title %>"
                            data-poster="<%= movie.poster %>"
                            data-year="<%= movie.year %>"
                        >
                            <i class="fas fa-bookmark mr-2"></i> Add to Watchlist
                        </button>
                        
                        <button class="favorite-btn px-6 py-3 bg-gray-700 hover:bg-gray-600 rounded-lg transition flex items-center shadow-lg hover:shadow-xl">
                            <i class="far fa-heart mr-2"></i> Add to Favorites
                        </button>

                        <!-- Add this right after the movie details buttons -->
                        <button class="bg-purple-600 hover:bg-purple-700 text-white font-bold py-2 px-4 rounded-lg transition flex items-center space-x-2 ml-2" id="summary-btn">
                            <i class="fas fa-robot"></i>
                            <span>AI Summary</span>
                        </button>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Player Section -->
        <div id="player-container" class="hidden mb-8">
            <div class="bg-black rounded-xl overflow-hidden shadow-2xl relative" style="padding-top: 56.25%;">
                <div class="movie-player-container absolute inset-0 w-full h-full">
                    <!-- Loading Overlay -->
                    <div id="player-loading-overlay" class="absolute inset-0 flex flex-col items-center justify-center z-10 bg-black/90 backdrop-filter backdrop-blur-sm">
                        <div class="relative mb-6">
                            <div class="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-16 h-16 rounded-full bg-green-500/20 animate-pulse"></div>
                            <div class="w-12 h-12 border-4 border-gray-600 border-t-green-500 rounded-full animate-spin"></div>
                        </div>
                        <p class="text-white text-lg font-medium">Loading movie...</p>
                        <p id="player-loading-title" class="text-sm text-gray-400 mt-2"></p>
                    </div>
                    
                    <iframe 
                        id="movie-player" 
                        src="" 
                        frameborder="0" 
                        class="absolute inset-0 w-full h-full" 
                        allowfullscreen
                        referrerpolicy="no-referrer"
                        allow="autoplay; encrypted-media; picture-in-picture"
                        loading="lazy"
                    ></iframe>
                    
                    <!-- Player Controls -->
                    <div class="player-controls absolute bottom-0 left-0 right-0 z-10 p-4">
                        <div class="flex justify-between items-center">
                            <!-- Left side controls -->
                            <div class="opacity-0 transition-opacity duration-300 hover:opacity-100">
                                <span id="player-title" class="text-white text-sm md:text-base font-medium drop-shadow-lg hidden md:inline-block"></span>
                            </div>
                            
                            <!-- Right side controls -->
                            <div class="flex gap-3 opacity-0 transition-opacity duration-300 hover:opacity-100">
                                <button id="player-fullscreen-btn" class="bg-gray-800/80 hover:bg-gray-700 text-white rounded-full w-10 h-10 flex items-center justify-center shadow-lg transition-transform hover:-translate-y-1 active:translate-y-0">
                                    <i class="fas fa-expand"></i>
                                </button>
                                <a id="open-dedicated-player" href="#" target="_blank" class="bg-green-600/80 hover:bg-green-500 text-white rounded-full w-10 h-10 flex items-center justify-center shadow-lg transition-transform hover:-translate-y-1 active:translate-y-0" title="Open in dedicated player">
                                    <i class="fas fa-external-link-alt"></i>
                                </a>
                                <button id="close-player" class="bg-gray-800/80 hover:bg-gray-700 text-white rounded-full w-10 h-10 flex items-center justify-center shadow-lg transition-transform hover:-translate-y-1 active:translate-y-0">
                                    <i class="fas fa-times"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Gradient overlay for better UI visibility -->
                    <div class="absolute inset-0 pointer-events-none bg-gradient-to-t from-black/40 via-transparent to-black/20 opacity-50"></div>
                </div>
            </div>
        </div>
        
        <!-- Trailers Section -->
        <% if (movie.trailers && movie.trailers.length > 0) { %>
            <div class="mb-8">
                <h2 class="text-2xl font-bold mb-6"><i class="fas fa-film mr-2"></i>Trailers & Videos</h2>
                <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
                    <% movie.trailers.forEach(trailer => { %>
                        <div class="bg-gray-800 rounded-lg overflow-hidden shadow-lg group">
                            <div class="trailer-card cursor-pointer" data-video-id="<%= trailer.id %>" data-video-title="<%= trailer.name %>">
                                <div class="relative aspect-video">
                                    <img 
                                        src="<%= trailer.thumbnail %>" 
                                        alt="<%= trailer.name %>" 
                                        class="w-full h-full object-cover"
                                        onerror="this.onerror=null; this.src='https://via.placeholder.com/640x360?text=No+Thumbnail';"
                                    >
                                    <div class="absolute inset-0 bg-black/40 opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-center justify-center">
                                        <div class="bg-green-600/80 rounded-full p-4 transform group-hover:scale-110 transition-transform">
                                            <i class="fas fa-play text-xl"></i>
                                        </div>
                                    </div>
                                    <div class="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black to-transparent py-2 px-3">
                                        <h3 class="text-sm font-bold line-clamp-2"><%= trailer.name %></h3>
                                        <span class="text-xs text-gray-300"><%= trailer.type %></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    <% }); %>
                </div>
            </div>
        <% } %>
        
        <!-- More Like This Section -->
        <div class="mb-8">
            <h2 class="text-2xl font-bold mb-6"><i class="fas fa-film mr-2"></i> More Like This</h2>
            <div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6 gap-4">
                <% if (movie.similarMovies && movie.similarMovies.length > 0) { %>
                    <% movie.similarMovies.forEach(similar => { %>
                        <div class="movie-card bg-gray-800 rounded-lg overflow-hidden shadow-lg animate__animated animate__fadeIn hover:shadow-xl transition-all duration-300 group">
                            <a href="/view/movie/<%= similar.id %>">
                                <div class="relative pb-[150%]">
                                    <% if (similar.poster) { %>
                                        <img src="<%= similar.poster %>" alt="<%= similar.title %>" class="absolute inset-0 w-full h-full object-cover transition-transform duration-500 group-hover:scale-110" onerror="this.onerror=null; this.src='https://via.placeholder.com/300x450?text=No+Poster'; this.classList.add('object-contain');">
                                        <div class="absolute inset-0 bg-black/40 opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-center justify-center">
                                            <span class="text-white px-3 py-1 rounded-full font-bold bg-green-600/80 transform scale-0 group-hover:scale-100 transition-transform duration-300">View</span>
                                        </div>
                                    <% } else { %>
                                        <div class="absolute inset-0 w-full h-full bg-gray-700 flex items-center justify-center">
                                            <i class="fas fa-film text-3xl text-gray-600"></i>
                                        </div>
                                    <% } %>
                                    <div class="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black to-transparent py-2 px-3">
                                        <h3 class="text-sm font-bold line-clamp-2"><%= similar.title %></h3>
                                    </div>
                                </div>
                            </a>
                        </div>
                    <% }); %>
                <% } else { %>
                    <% for(let i = 0; i < 6; i++) { %>
                    <div class="movie-card bg-gray-800 rounded-lg overflow-hidden shadow-lg animate__animated animate__fadeIn">
                        <div class="relative pb-[150%] bg-gray-700">
                            <div class="absolute inset-0 w-full h-full flex items-center justify-center">
                                <div class="animate-pulse">
                                    <i class="fas fa-film text-3xl text-gray-600"></i>
                                </div>
                            </div>
                            <div class="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black to-transparent py-2 px-3">
                                <h3 class="text-sm font-bold">Similar Movie</h3>
                            </div>
                        </div>
                    </div>
                    <% } %>
                <% } %>
            </div>
        </div>
    <% } else { %>
        <div class="text-center py-16">
            <i class="fas fa-exclamation-circle text-5xl text-red-500 mb-4"></i>
            <h2 class="text-2xl font-bold">Movie Not Found</h2>
            <p class="mt-2 text-gray-400">The movie you're looking for doesn't exist or has been removed.</p>
            <a href="/browse" class="inline-block mt-6 px-6 py-3 bg-green-600 hover:bg-green-700 rounded-lg transition">
                Browse Movies
            </a>
        </div>
    <% } %>
</div>

<!-- Watch Party Configuration Modal -->
<div id="watchPartyModal" class="fixed inset-0 bg-black bg-opacity-50 z-50 hidden flex items-center justify-center">
    <div class="bg-gray-900 rounded-lg p-6 max-w-md w-full mx-4 animate__animated animate__fadeInUp">
        <div class="flex justify-between items-center mb-4">
            <h3 class="text-xl font-bold text-white">Create Watch Party</h3>
            <button class="text-gray-400 hover:text-white" onclick="closeWatchPartyModal()">
                <i class="fas fa-times"></i>
            </button>
        </div>
        
        <div class="space-y-4">
            <div>
                <label class="block text-gray-300 mb-2">Maximum Members</label>
                <select id="maxMembers" class="w-full bg-gray-800 text-white rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-purple-500">
                    <option value="2">2 people</option>
                    <option value="5">5 people</option>
                    <option value="10" selected>10 people</option>
                    <option value="20">20 people</option>
                </select>
            </div>
            
            <div>
                <label class="block text-gray-300 mb-2">Privacy</label>
                <div class="flex space-x-4">
                    <label class="flex items-center">
                        <input type="radio" name="privacy" value="public" checked class="text-purple-500">
                        <span class="ml-2 text-white">Public</span>
                    </label>
                    <label class="flex items-center">
                        <input type="radio" name="privacy" value="private" class="text-purple-500">
                        <span class="ml-2 text-white">Private</span>
                    </label>
                </div>
            </div>
            
            <div id="passwordField" class="hidden">
                <label class="block text-gray-300 mb-2">Password</label>
                <input type="password" id="partyPassword" class="w-full bg-gray-800 text-white rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-purple-500" placeholder="Enter party password">
            </div>
            
            <div class="mt-6 flex justify-end space-x-3">
                <button onclick="closeWatchPartyModal()" class="px-4 py-2 bg-gray-700 text-white rounded hover:bg-gray-600 transition">
                    Cancel
                </button>
                <button onclick="createWatchParty()" class="px-4 py-2 bg-purple-600 text-white rounded hover:bg-purple-500 transition">
                    Create Party
                </button>
            </div>
        </div>
    </div>
</div>

<!-- AI Summary Modal -->
<div id="summary-modal" class="fixed inset-0 z-50 hidden">
    <div class="absolute inset-0 bg-black/70 backdrop-blur-sm"></div>
    <div class="relative min-h-screen flex items-center justify-center p-4">
        <div class="bg-gray-900 rounded-xl w-full max-w-2xl p-6 shadow-2xl transform transition-all">
            <div class="flex justify-between items-center mb-4">
                <h3 class="text-xl font-bold">AI-Generated Summary</h3>
                <button id="close-summary-modal" class="text-gray-400 hover:text-white">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <div id="summary-content" class="prose prose-invert max-w-none">
                <div class="flex justify-center items-center py-8">
                    <div class="animate-spin rounded-full h-12 w-12 border-4 border-green-500 border-t-transparent"></div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- JavaScript for Player -->
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Get DOM elements
        const playerContainer = document.getElementById('player-container');
        const moviePlayer = document.getElementById('movie-player');
        const playerLoadingOverlay = document.getElementById('player-loading-overlay');
        const playerLoadingTitle = document.getElementById('player-loading-title');
        const playerTitle = document.getElementById('player-title');
        const closePlayer = document.getElementById('close-player');
        const fullscreenBtn = document.getElementById('player-fullscreen-btn');
        const openDedicatedPlayer = document.getElementById('open-dedicated-player');
        const playBtn = document.querySelector('.play-btn');
        
        // Add summary modal elements
        const summaryBtn = document.getElementById('summary-btn');
        const summaryModal = document.getElementById('summary-modal');
        const closeSummaryModal = document.getElementById('close-summary-modal');
        const summaryContent = document.getElementById('summary-content');

        // Function to show loading state
        function showLoading() {
            if (summaryContent) {
                summaryContent.innerHTML = `
                    <div class="flex justify-center items-center py-8">
                        <div class="animate-spin rounded-full h-12 w-12 border-4 border-green-500 border-t-transparent"></div>
                    </div>
                `;
            }
        }
        
        // Function to show error state
        function showError(message) {
            if (summaryContent) {
                summaryContent.innerHTML = `
                    <div class="text-center py-8">
                        <i class="fas fa-exclamation-circle text-red-500 text-4xl mb-4"></i>
                        <p class="text-red-400">${message}</p>
                        <button id="retry-summary" class="mt-4 px-4 py-2 bg-green-600 hover:bg-green-500 rounded-lg transition">
                            <i class="fas fa-redo mr-2"></i>Try Again
                        </button>
                    </div>
                `;
                
                // Add retry handler
                document.getElementById('retry-summary')?.addEventListener('click', fetchSummary);
            }
        }
        
        // Function to show success state
        function showSummary(summary) {
            if (summaryContent) {
                summaryContent.innerHTML = `
                    <div class="space-y-4">
                        <p class="text-gray-300 leading-relaxed">${summary}</p>
                    </div>
                `;
            }
        }
        
        // Function to fetch summary
        async function fetchSummary() {
            showLoading();
            
            try {
                const movieId = '<%= movie.tmdbId %>';
                const response = await fetch(`/api/movie/summary/${movieId}`);
                const data = await response.json();
                
                if (!response.ok) throw new Error(data.error || 'Failed to generate summary');
                if (!data.success) throw new Error(data.error || 'Failed to generate summary');
                
                showSummary(data.summary);
            } catch (error) {
                console.error('Summary error:', error);
                showError(error.message || 'Failed to generate summary. Please try again later.');
            }
        }

        // Summary button click handler
        if (summaryBtn && summaryModal) {
            summaryBtn.addEventListener('click', () => {
                console.log('Summary button clicked');
                summaryModal.classList.remove('hidden');
                fetchSummary();
            });
        }

        // Close summary modal handler
        if (closeSummaryModal && summaryModal) {
            closeSummaryModal.addEventListener('click', () => {
                console.log('Closing summary modal');
                summaryModal.classList.add('hidden');
            });

            // Close modal when clicking outside
            summaryModal.addEventListener('click', (e) => {
                if (e.target === summaryModal) {
                    console.log('Closing summary modal (outside click)');
                    summaryModal.classList.add('hidden');
                }
            });
        }

        // Close modal with Escape key
        document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape' && summaryModal && !summaryModal.classList.contains('hidden')) {
                console.log('Closing summary modal (Escape key)');
                summaryModal.classList.add('hidden');
            }
        });

        // Play button functionality
        if (playBtn) {
            playBtn.addEventListener('mouseenter', function() {
                this.classList.remove('animate__pulse');
                this.classList.add('animate__animated', 'animate__bounceIn');
            });
            
            playBtn.addEventListener('mouseleave', function() {
                this.classList.remove('animate__bounceIn');
                this.classList.add('animate__pulse');
            });
            
            playBtn.addEventListener('click', function(e) {
                e.preventDefault();
                const embedUrl = this.getAttribute('href');
                const movieTitle = '<%= movie.title %>';
                
                // Set up the player
                moviePlayer.src = embedUrl;
                playerLoadingTitle.textContent = movieTitle;
                playerTitle.textContent = movieTitle;
                
                // Open dedicated player link
                openDedicatedPlayer.href = `/api/player?id=<%= movie.tmdbId %>&title=${encodeURIComponent(movieTitle)}&poster=${encodeURIComponent('<%= movie.poster %>')}`;
                
                // Show the player container
                playerContainer.classList.remove('hidden');
                playerContainer.classList.add('animate__animated', 'animate__fadeIn');
                
                // Scroll to player
                playerContainer.scrollIntoView({ behavior: 'smooth' });
                
                // Handle loading state
                moviePlayer.addEventListener('load', function() {
                    setTimeout(() => {
                        playerLoadingOverlay.classList.add('animate__animated', 'animate__fadeOut');
                        setTimeout(() => {
                            playerLoadingOverlay.style.display = 'none';
                        }, 500);
                    }, 1500);
                });
            });
        }
        
        // Trailer player functionality
        const trailerCards = document.querySelectorAll('.trailer-card');
        trailerCards.forEach(card => {
            card.addEventListener('click', function() {
                const videoId = this.dataset.videoId;
                const videoTitle = this.dataset.videoTitle;
                
                // Update player source to YouTube embed
                const embedUrl = `https://www.youtube.com/embed/${videoId}?autoplay=1&rel=0`;
                moviePlayer.src = embedUrl;
                
                // Update loading overlay
                playerLoadingTitle.textContent = videoTitle;
                playerTitle.textContent = videoTitle;
                
                // Show player container
                playerContainer.classList.remove('hidden');
                playerContainer.classList.add('animate__animated', 'animate__fadeIn');
                
                // Scroll to player
                playerContainer.scrollIntoView({ behavior: 'smooth' });
                
                // Handle loading state
                setTimeout(() => {
                    playerLoadingOverlay.classList.add('animate__animated', 'animate__fadeOut');
                    setTimeout(() => {
                        playerLoadingOverlay.style.display = 'none';
                    }, 500);
                }, 1500);
            });
        });
        
        // Close player functionality
        if (closePlayer) {
            closePlayer.addEventListener('click', function() {
                moviePlayer.src = '';
                playerContainer.classList.add('hidden');
                playerLoadingOverlay.style.display = 'flex';
                playerLoadingOverlay.classList.remove('animate__fadeOut');
            });
        }
        
        // Fullscreen functionality
        if (fullscreenBtn) {
            fullscreenBtn.addEventListener('click', function() {
                if (moviePlayer.requestFullscreen) {
                    moviePlayer.requestFullscreen();
                } else if (moviePlayer.webkitRequestFullscreen) {
                    moviePlayer.webkitRequestFullscreen();
                } else if (moviePlayer.msRequestFullscreen) {
                    moviePlayer.msRequestFullscreen();
                }
            });
        }
        
        // Watch Party Button Handler
        const watchPartyBtn = document.querySelector('.watch-party-btn');
        if (watchPartyBtn) {
            watchPartyBtn.addEventListener('click', function() {
                openWatchPartyModal();
            });
        }
    });
</script>

<!-- Include Watchlist JS -->
<script src="/js/watchlist.js"></script>

<!-- Add this script section at the bottom of the file -->
<script>
    // Watch Party Modal Functions
    function openWatchPartyModal() {
        document.getElementById('watchPartyModal').classList.remove('hidden');
    }
    
    function closeWatchPartyModal() {
        document.getElementById('watchPartyModal').classList.add('hidden');
    }
    
    // Toggle password field based on privacy selection
    document.querySelectorAll('input[name="privacy"]').forEach(radio => {
        radio.addEventListener('change', function() {
            const passwordField = document.getElementById('passwordField');
            passwordField.classList.toggle('hidden', this.value === 'public');
        });
    });
    
    // Create Watch Party
    async function createWatchParty() {
        const maxMembers = document.getElementById('maxMembers').value;
        const isPrivate = document.querySelector('input[name="privacy"]:checked').value === 'private';
        const password = isPrivate ? document.getElementById('partyPassword').value : null;
        
        if (isPrivate && !password) {
            alert('Please enter a password for private watch party.');
            return;
        }
        
        const userId = localStorage.getItem('userId') || generateUserId();
        const button = document.querySelector('.watch-party-btn');
        
        try {
            const response = await fetch('/api/watch-party/create', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    hostId: userId,
                    mediaId: button.dataset.id,
                    mediaType: button.dataset.type,
                    title: button.dataset.title,
                    config: {
                        maxMembers: parseInt(maxMembers),
                        isPrivate,
                        password
                    }
                })
            });
            
            const data = await response.json();
            if (data.success) {
                // Redirect to the player with party ID
                window.location.href = `/api/player?id=${button.dataset.id}&title=${encodeURIComponent(button.dataset.title)}&party=${data.party.id}`;
            }
        } catch (error) {
            console.error('Error creating watch party:', error);
            alert('Failed to create watch party. Please try again.');
        }
    }
    
    function generateUserId() {
        const userId = 'user_' + Math.random().toString(36).substr(2, 9);
        localStorage.setItem('userId', userId);
        return userId;
    }
</script>

<!-- Add these styles to maintain consistency -->
<style>
    #summary-modal {
        backdrop-filter: blur(5px);
    }
    
    .animate__animated {
        animation-duration: 0.3s;
    }
    
    @keyframes modalFade {
        from { opacity: 0; transform: translateY(20px); }
        to { opacity: 1; transform: translateY(0); }
    }
</style> 